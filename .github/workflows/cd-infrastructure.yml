name: Infrastructure CD
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        type: choice
        default: 'Development'
        choices:
          - 'Development'
          - 'Staging'
          - 'Production'
      runway-tags:
        required: false
        type: string
        default: 'ci'
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      aws-region:
        required: false
        type: string
      deploy-environment:
        required: false
        type: string
      runway-tags:
        required: false
        type: string
        default: 'ci'
    secrets:
      AWS_IAM_ASSUME_ROLE_ARN:
        required: false
    outputs:
      s3-bucket-id:
        description: 'S3 bucket ID'
        value: ${{ jobs.deploy.outputs.s3-bucket-id }}
      cloudfront-distribution-id:
        description: 'CloudFront distribution ID'
        value: ${{ jobs.deploy.outputs.cloudfront-distribution-id }}
      cloudfront-distribution-domain-name:
        description: 'CloudFront distribution domain name'
        value: ${{ jobs.deploy.outputs.cloudfront-distribution-domain-name }}
jobs:
  deploy:
    name: "Deploy Runway"
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout
    env:
      AWS_DEFAULT_REGION: ${{ inputs.aws-region || vars.AWS_REGION }}
      DEPLOY_ENVIRONMENT: ${{ inputs.deploy-environment || vars.DEPLOY_ENVIRONMENT }}
    steps:
      - name: Setup Runway
        uses: supplypike/setup-bin@v3
        with:
          uri: "https://oni.ca/runway/2.6.3/linux"
          name: 'runway'
          version: '2.6.3' # this enables caching
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ASSUME_ROLE_ARN }}
          role-session-name: github-actions
          aws-region: ${{ inputs.aws-region || vars.AWS_REGION }}
      - name: Runway Deploy
        run: cd runway && runway deploy --ci --tag ${{ inputs.runway-tags }} --deploy-environment ${{ env.DEPLOY_ENVIRONMENT }}
      - name: Get Outputs
        id: outputs
        run: |
          cd runway/s3-website.tf;
          echo "s3_bucket_id=$(runway tfenv run -- output -raw s3_bucket_id)" >> $GITHUB_OUTPUT;
          echo "cloudfront_distribution_domain_name=$(runway tfenv run -- output -raw cloudfront_distribution_domain_name)" >> $GITHUB_OUTPUT;
          echo "cloudfront_distribution_id=$(runway tfenv run -- output -raw cloudfront_distribution_id)" >> $GITHUB_OUTPUT;
