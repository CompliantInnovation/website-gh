name: CD CloudFront
on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: false
      aws-region:
        type: string
        required: false
      s3-bucket-name:
        type: string
        description: 'S3 bucket name'
        required: true
        default: 'docspera-homepage'
      cloudfront-distribution-id:
        type: string
        description: 'CloudFront distribution ID'
        required: true
        default: 'E1ZQZQZQZQZQZQ'
      s3-bucket-prefix:
        type: string
        description: 'S3 bucket prefix'
        required: true
        default: ''
      artifact-name:
        type: string
        description: 'Artifact name'
        required: true
        default: 'Out'
    secrets:
      AWS_IAM_ASSUME_ROLE_ARN:
        required: false
jobs:
  deploy:
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: ${{ inputs.aws-region || vars.AWS_REGION }}
    environment:
      name: ${{ inputs.environment }}
      url: "https://${{ steps.get-url.outputs.domain-name }}"
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.artifact-name }}
          path: ./out
      - name: Display structure of downloaded artifacts
        run: ls -R
        working-directory: ./out
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ASSUME_ROLE_ARN }}
          role-session-name: github-actions
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
      - name: Sync S3 bucket
        run: aws s3 sync ./out s3://${{ inputs.s3-bucket-name }}/${{ inputs.s3-bucket-prefix }} --delete
      - name: Invalidate CloudFront distribution
        run: aws cloudfront create-invalidation --distribution-id ${{ inputs.cloudfront-distribution-id }} --paths "/*"
      - id: get-url
        name: Get CloudFront distribution URL
        run: |
          echo domain-name=$(aws cloudfront get-distribution --id ${{ inputs.cloudfront-distribution-id }} --output json --query 'Distribution.DomainName' | tr -d '"') >> $GITHUB_OUTPUT;
